// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ChinChunPetShop.Models.Entity;

public partial class ChinChunPetShopContext : DbContext
{
    public ChinChunPetShopContext(DbContextOptions<ChinChunPetShopContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CTDH> CTDHs { get; set; }

    public virtual DbSet<CTDT> CTDTs { get; set; }

    public virtual DbSet<CTGiaoDich> CTGiaoDiches { get; set; }

    public virtual DbSet<CTKM> CTKMs { get; set; }

    public virtual DbSet<DoiTraHang> DoiTraHangs { get; set; }

    public virtual DbSet<DonHang> DonHangs { get; set; }

    public virtual DbSet<GioHang> GioHangs { get; set; }

    public virtual DbSet<KhachHang> KhachHangs { get; set; }

    public virtual DbSet<KhoHang> KhoHangs { get; set; }

    public virtual DbSet<LoaiSanPham> LoaiSanPhams { get; set; }

    public virtual DbSet<MocTangQua> MocTangQuas { get; set; }

    public virtual DbSet<NhanHieu> NhanHieus { get; set; }

    public virtual DbSet<NhanVien> NhanViens { get; set; }

    public virtual DbSet<PTTT> PTTTs { get; set; }

    public virtual DbSet<PhanQuyen> PhanQuyens { get; set; }

    public virtual DbSet<PhiVanChuyen> PhiVanChuyens { get; set; }

    public virtual DbSet<SPKM> SPKMs { get; set; }

    public virtual DbSet<SanPham> SanPhams { get; set; }

    public virtual DbSet<SoKho> SoKhos { get; set; }

    public virtual DbSet<ThamSo> ThamSos { get; set; }

    public virtual DbSet<TonKho> TonKhos { get; set; }

    public virtual DbSet<TrangThaiDH> TrangThaiDHs { get; set; }

    public virtual DbSet<VaiTro> VaiTros { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_unicode_520_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<CTDH>(entity =>
        {
            entity.HasKey(e => new { e.MaDH, e.MaSP })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("CTDH");

            entity.HasIndex(e => e.MaSP, "fk_CTDH_SanPham_MaSP");

            entity.Property(e => e.MaDH).HasMaxLength(8);
            entity.Property(e => e.MaSP).HasMaxLength(8);
            entity.Property(e => e.DonGia).HasPrecision(20, 6);
            entity.Property(e => e.SoLuong).HasColumnType("int(11)");

            entity.HasOne(d => d.MaDHNavigation).WithMany(p => p.CTDHs)
                .HasForeignKey(d => d.MaDH)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTDH_DonHang_MaDH");

            entity.HasOne(d => d.MaSPNavigation).WithMany(p => p.CTDHs)
                .HasForeignKey(d => d.MaSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTDH_SanPham_MaSP");
        });

        modelBuilder.Entity<CTDT>(entity =>
        {
            entity.HasKey(e => new { e.MaDT, e.MaSP })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("CTDT");

            entity.HasIndex(e => e.MaSP, "fk_CTDT_SanPham_MaSP");

            entity.Property(e => e.MaDT).HasMaxLength(8);
            entity.Property(e => e.MaSP).HasMaxLength(8);
            entity.Property(e => e.GhiChu).HasColumnType("text");
            entity.Property(e => e.SoLuong).HasColumnType("int(11)");
            entity.Property(e => e.TinhTrangSP)
                .HasMaxLength(256)
                .HasDefaultValueSql("'0'");

            entity.HasOne(d => d.MaDTNavigation).WithMany(p => p.CTDTs)
                .HasForeignKey(d => d.MaDT)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTDT_DoiTraHang_MaDT");

            entity.HasOne(d => d.MaSPNavigation).WithMany(p => p.CTDTs)
                .HasForeignKey(d => d.MaSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTDT_SanPham_MaSP");
        });

        modelBuilder.Entity<CTGiaoDich>(entity =>
        {
            entity.HasKey(e => new { e.MaSP, e.MaSK })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("CTGiaoDich");

            entity.HasIndex(e => e.MaSK, "fk_CTGiaoDich_SoKho_MaSK");

            entity.Property(e => e.MaSP).HasMaxLength(8);
            entity.Property(e => e.MaSK).HasMaxLength(8);
            entity.Property(e => e.DonGia).HasPrecision(20, 6);
            entity.Property(e => e.SoLuong).HasColumnType("int(11)");

            entity.HasOne(d => d.MaSKNavigation).WithMany(p => p.CTGiaoDiches)
                .HasForeignKey(d => d.MaSK)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTGiaoDich_SoKho_MaSK");

            entity.HasOne(d => d.MaSPNavigation).WithMany(p => p.CTGiaoDiches)
                .HasForeignKey(d => d.MaSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTGiaoDich_SanPham_MaSP");
        });

        modelBuilder.Entity<CTKM>(entity =>
        {
            entity.HasKey(e => e.MaKM).HasName("PRIMARY");

            entity.ToTable("CTKM");

            entity.Property(e => e.MaKM).HasMaxLength(8);
            entity.Property(e => e.MoTa).HasColumnType("text");
            entity.Property(e => e.NgayBatDau).HasColumnType("datetime");
            entity.Property(e => e.NgayKetThuc).HasColumnType("datetime");
            entity.Property(e => e.PhanTramGiam).HasColumnType("int(11)");
            entity.Property(e => e.TenCTKM)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<DoiTraHang>(entity =>
        {
            entity.HasKey(e => e.MaDT).HasName("PRIMARY");

            entity.ToTable("DoiTraHang");

            entity.HasIndex(e => e.MaDH, "fk_DoiTraHang_DonHang_MaDH");

            entity.HasIndex(e => e.MaNV, "fk_DoiTraHang_NhanVien_MaNV");

            entity.Property(e => e.MaDT).HasMaxLength(8);
            entity.Property(e => e.GhiChu).HasColumnType("text");
            entity.Property(e => e.LiDoDT)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.MaDH)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.MaNV).HasMaxLength(8);
            entity.Property(e => e.NgayDT).HasColumnType("datetime");
            entity.Property(e => e.NgayXuLy).HasColumnType("datetime");

            entity.HasOne(d => d.MaDHNavigation).WithMany(p => p.DoiTraHangs)
                .HasForeignKey(d => d.MaDH)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_DoiTraHang_DonHang_MaDH");

            entity.HasOne(d => d.MaNVNavigation).WithMany(p => p.DoiTraHangs)
                .HasForeignKey(d => d.MaNV)
                .HasConstraintName("fk_DoiTraHang_NhanVien_MaNV");
        });

        modelBuilder.Entity<DonHang>(entity =>
        {
            entity.HasKey(e => e.MaDH).HasName("PRIMARY");

            entity.ToTable("DonHang");

            entity.HasIndex(e => e.MaKH, "fk_DonHang_KhachHang_MaKH");

            entity.HasIndex(e => e.MaNV, "fk_DonHang_NhanVien_MaNV");

            entity.HasIndex(e => e.MaPTTT, "fk_DonHang_PTTT_MaPTTT");

            entity.HasIndex(e => e.MaTTDH, "fk_DonHang_TrangThaiDH");

            entity.Property(e => e.MaDH).HasMaxLength(8);
            entity.Property(e => e.DiaChiGiaoHang).HasMaxLength(256);
            entity.Property(e => e.GhiChu).HasColumnType("text");
            entity.Property(e => e.MaKH)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.MaNV).HasMaxLength(8);
            entity.Property(e => e.MaPTTT)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.MaTTDH)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.NgayMuaHang)
                .HasDefaultValueSql("current_timestamp()")
                .HasColumnType("datetime");
            entity.Property(e => e.NgayNhanHang)
                .HasDefaultValueSql("current_timestamp()")
                .HasColumnType("datetime");
            entity.Property(e => e.PhiGiaoHang).HasPrecision(20, 6);
            entity.Property(e => e.SDTNguoiNhan).HasMaxLength(12);
            entity.Property(e => e.TenNguoiNhan).HasMaxLength(256);

            entity.HasOne(d => d.MaKHNavigation).WithMany(p => p.DonHangs)
                .HasForeignKey(d => d.MaKH)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_DonHang_KhachHang_MaKH");

            entity.HasOne(d => d.MaNVNavigation).WithMany(p => p.DonHangs)
                .HasForeignKey(d => d.MaNV)
                .HasConstraintName("fk_DonHang_NhanVien_MaNV");

            entity.HasOne(d => d.MaPTTTNavigation).WithMany(p => p.DonHangs)
                .HasForeignKey(d => d.MaPTTT)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_DonHang_PTTT_MaPTTT");

            entity.HasOne(d => d.MaTTDHNavigation).WithMany(p => p.DonHangs)
                .HasForeignKey(d => d.MaTTDH)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_DonHang_TrangThaiDH");
        });

        modelBuilder.Entity<GioHang>(entity =>
        {
            entity.HasKey(e => e.MaGH).HasName("PRIMARY");

            entity.ToTable("GioHang");

            entity.HasIndex(e => e.MaKH, "fk_GioHang_KhachHang_MaKH");

            entity.HasIndex(e => e.MaSP, "fk_GioHang_SanPham_MaSP");

            entity.Property(e => e.MaGH).HasMaxLength(8);
            entity.Property(e => e.DonGia).HasPrecision(20, 6);
            entity.Property(e => e.MaKH)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.MaSP)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.SoLuong).HasColumnType("int(11)");

            entity.HasOne(d => d.MaKHNavigation).WithMany(p => p.GioHangs)
                .HasForeignKey(d => d.MaKH)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_GioHang_KhachHang_MaKH");

            entity.HasOne(d => d.MaSPNavigation).WithMany(p => p.GioHangs)
                .HasForeignKey(d => d.MaSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_GioHang_SanPham_MaSP");
        });

        modelBuilder.Entity<KhachHang>(entity =>
        {
            entity.HasKey(e => e.MaKH).HasName("PRIMARY");

            entity.ToTable("KhachHang");

            entity.Property(e => e.MaKH).HasMaxLength(8);
            entity.Property(e => e.DiaChi).HasMaxLength(256);
            entity.Property(e => e.Diem).HasColumnType("int(11)");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.HinhAnh).HasMaxLength(256);
            entity.Property(e => e.HoTen)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.MaXacThuc).HasMaxLength(8);
            entity.Property(e => e.MatKhau)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.NgayTaoTK)
                .HasDefaultValueSql("current_timestamp()")
                .HasColumnType("datetime");
            entity.Property(e => e.SDT)
                .IsRequired()
                .HasMaxLength(12);
            entity.Property(e => e.ThoiHanMXT).HasColumnType("datetime");
            entity.Property(e => e.XacThucEmail).HasDefaultValueSql("'0'");
        });

        modelBuilder.Entity<KhoHang>(entity =>
        {
            entity.HasKey(e => e.MaKho).HasName("PRIMARY");

            entity.ToTable("KhoHang");

            entity.Property(e => e.MaKho).HasMaxLength(8);
            entity.Property(e => e.DiaChi)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.TenKho)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<LoaiSanPham>(entity =>
        {
            entity.HasKey(e => e.MaLoaiSP).HasName("PRIMARY");

            entity.ToTable("LoaiSanPham");

            entity.Property(e => e.MaLoaiSP).HasMaxLength(8);
            entity.Property(e => e.TenLoaiSP)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<MocTangQua>(entity =>
        {
            entity.HasKey(e => e.MaMTQ).HasName("PRIMARY");

            entity.ToTable("MocTangQua");

            entity.Property(e => e.MaMTQ)
                .HasMaxLength(8)
                .HasDefaultValueSql("''");
            entity.Property(e => e.GiaTri).HasPrecision(20, 6);
            entity.Property(e => e.SoDiem).HasColumnType("int(11)");
        });

        modelBuilder.Entity<NhanHieu>(entity =>
        {
            entity.HasKey(e => e.MaNhanHieu).HasName("PRIMARY");

            entity.ToTable("NhanHieu");

            entity.Property(e => e.MaNhanHieu).HasMaxLength(8);
            entity.Property(e => e.TenNhanHieu)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<NhanVien>(entity =>
        {
            entity.HasKey(e => e.MaNV).HasName("PRIMARY");

            entity.ToTable("NhanVien");

            entity.Property(e => e.MaNV).HasMaxLength(8);
            entity.Property(e => e.DiaChi).HasMaxLength(200);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.HinhAnh).HasMaxLength(256);
            entity.Property(e => e.HoNV)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Luong).HasPrecision(20, 6);
            entity.Property(e => e.MaXacThuc).HasMaxLength(8);
            entity.Property(e => e.MatKhau)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.SDT)
                .IsRequired()
                .HasMaxLength(12);
            entity.Property(e => e.TenNV)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ThoiHanMXT).HasColumnType("datetime");
        });

        modelBuilder.Entity<PTTT>(entity =>
        {
            entity.HasKey(e => e.MaPTTT).HasName("PRIMARY");

            entity.ToTable("PTTT");

            entity.Property(e => e.MaPTTT).HasMaxLength(8);
            entity.Property(e => e.GhiChu).HasColumnType("text");
            entity.Property(e => e.TenPTTT)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<PhanQuyen>(entity =>
        {
            entity.HasKey(e => new { e.MaVT, e.MaNV })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("PhanQuyen");

            entity.HasIndex(e => e.MaNV, "fk_PhanQuyen_NhanVien_MaNV");

            entity.Property(e => e.MaVT)
                .HasMaxLength(8)
                .HasDefaultValueSql("''");
            entity.Property(e => e.MaNV)
                .HasMaxLength(8)
                .HasDefaultValueSql("''");
            entity.Property(e => e.GhiChu).HasColumnType("text");

            entity.HasOne(d => d.MaNVNavigation).WithMany(p => p.PhanQuyens)
                .HasForeignKey(d => d.MaNV)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_PhanQuyen_NhanVien_MaNV");

            entity.HasOne(d => d.MaVTNavigation).WithMany(p => p.PhanQuyens)
                .HasForeignKey(d => d.MaVT)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_PhanQuyen_VaiTro_MaVT");
        });

        modelBuilder.Entity<PhiVanChuyen>(entity =>
        {
            entity.HasKey(e => e.KhoiLuongMin).HasName("PRIMARY");

            entity.ToTable("PhiVanChuyen");

            entity.Property(e => e.KhoiLuongMin)
                .ValueGeneratedNever()
                .HasColumnType("int(11)");
            entity.Property(e => e.ChiPhi).HasPrecision(20, 6);
            entity.Property(e => e.ChiPhiThem).HasPrecision(20, 6);
            entity.Property(e => e.KhoiLuongMax).HasColumnType("int(11)");
        });

        modelBuilder.Entity<SPKM>(entity =>
        {
            entity.HasKey(e => new { e.MaKM, e.MaSP })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("SPKM");

            entity.HasIndex(e => e.MaSP, "fk_SanPham_MaSP");

            entity.Property(e => e.MaKM).HasMaxLength(8);
            entity.Property(e => e.MaSP).HasMaxLength(8);
            entity.Property(e => e.Ghichu).HasMaxLength(256);

            entity.HasOne(d => d.MaKMNavigation).WithMany(p => p.SPKMs)
                .HasForeignKey(d => d.MaKM)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_CTKM_MaKM");

            entity.HasOne(d => d.MaSPNavigation).WithMany(p => p.SPKMs)
                .HasForeignKey(d => d.MaSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_SanPham_MaSP");
        });

        modelBuilder.Entity<SanPham>(entity =>
        {
            entity.HasKey(e => e.MaSP).HasName("PRIMARY");

            entity.ToTable("SanPham");

            entity.HasIndex(e => e.MaLoaiSP, "MaLoaiSP");

            entity.HasIndex(e => e.MaNhanHieu, "MaNhanHieu");

            entity.Property(e => e.MaSP).HasMaxLength(8);
            entity.Property(e => e.DonViTinh)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.GiaBanLe).HasPrecision(20, 6);
            entity.Property(e => e.GiaBanSi).HasPrecision(20, 6);
            entity.Property(e => e.GiaNhap).HasPrecision(20, 6);
            entity.Property(e => e.GioiThieu).HasColumnType("text");
            entity.Property(e => e.HinhAnh)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.KhoiLuong).HasColumnType("int(11)");
            entity.Property(e => e.MaLoaiSP)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.MaNhanHieu)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.MaSKU)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.MaVach).HasMaxLength(15);
            entity.Property(e => e.MoTa).HasColumnType("text");
            entity.Property(e => e.TenSP)
                .IsRequired()
                .HasMaxLength(256);

            entity.HasOne(d => d.MaLoaiSPNavigation).WithMany(p => p.SanPhams)
                .HasForeignKey(d => d.MaLoaiSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("MaLoaiSP");

            entity.HasOne(d => d.MaNhanHieuNavigation).WithMany(p => p.SanPhams)
                .HasForeignKey(d => d.MaNhanHieu)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("MaNhanHieu");
        });

        modelBuilder.Entity<SoKho>(entity =>
        {
            entity.HasKey(e => e.MaSK).HasName("PRIMARY");

            entity.ToTable("SoKho");

            entity.HasIndex(e => e.MaNV, "fk_sk_nv");

            entity.Property(e => e.MaSK).HasMaxLength(8);
            entity.Property(e => e.GhiChu).HasColumnType("text");
            entity.Property(e => e.LyDoNhapXuat)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.MaNV)
                .IsRequired()
                .HasMaxLength(8);
            entity.Property(e => e.NgayGiaoDich).HasColumnType("datetime");

            entity.HasOne(d => d.MaNVNavigation).WithMany(p => p.SoKhos)
                .HasForeignKey(d => d.MaNV)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_sk_nv");
        });

        modelBuilder.Entity<ThamSo>(entity =>
        {
            entity.HasKey(e => e.MaTS).HasName("PRIMARY");

            entity.ToTable("ThamSo");

            entity.Property(e => e.MaTS).HasMaxLength(8);
            entity.Property(e => e.GiaTriGhiDiem).HasPrecision(20, 6);
            entity.Property(e => e.NgayCapNhat).HasColumnType("datetime");
            entity.Property(e => e.SLMuaSiToiThieu).HasColumnType("int(11)");
            entity.Property(e => e.SoNgayDoiTra).HasColumnType("int(11)");
            entity.Property(e => e.ThoiGianTraHang).HasColumnType("int(11)");
            entity.Property(e => e.ThoiGianTuDongHuyDon).HasColumnType("int(11)");
            entity.Property(e => e.TonKhoCanhBao).HasColumnType("int(11)");
            entity.Property(e => e.TonKhoToiDa).HasColumnType("int(11)");
            entity.Property(e => e.TonKhoToiThieu).HasColumnType("int(11)");
        });

        modelBuilder.Entity<TonKho>(entity =>
        {
            entity.HasKey(e => new { e.MaSP, e.MaKho })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("TonKho");

            entity.HasIndex(e => e.MaKho, "fk_TonKho_KhoHang_MaKho");

            entity.Property(e => e.MaSP).HasMaxLength(8);
            entity.Property(e => e.MaKho)
                .HasMaxLength(8)
                .HasDefaultValueSql("''");
            entity.Property(e => e.SLCoTheBan).HasColumnType("int(11)");
            entity.Property(e => e.SLDaBan).HasColumnType("int(11)");
            entity.Property(e => e.SLTrongKho).HasColumnType("int(11)");

            entity.HasOne(d => d.MaKhoNavigation).WithMany(p => p.TonKhos)
                .HasForeignKey(d => d.MaKho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_TonKho_KhoHang_MaKho");

            entity.HasOne(d => d.MaSPNavigation).WithMany(p => p.TonKhos)
                .HasForeignKey(d => d.MaSP)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_TonKho_SanPham_MaSP");
        });

        modelBuilder.Entity<TrangThaiDH>(entity =>
        {
            entity.HasKey(e => e.MaTTDH).HasName("PRIMARY");

            entity.ToTable("TrangThaiDH");

            entity.Property(e => e.MaTTDH).HasMaxLength(8);
            entity.Property(e => e.GhiChu).HasColumnType("text");
            entity.Property(e => e.TenTTDH)
                .IsRequired()
                .HasMaxLength(256)
                .HasDefaultValueSql("''");
        });

        modelBuilder.Entity<VaiTro>(entity =>
        {
            entity.HasKey(e => e.MaVT).HasName("PRIMARY");

            entity.ToTable("VaiTro");

            entity.Property(e => e.MaVT).HasMaxLength(8);
            entity.Property(e => e.TenVT)
                .IsRequired()
                .HasMaxLength(256);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}